// Code generated by MockGen. DO NOT EDIT.
// Source: token_serializer.go
//
// Generated by this command:
//
//	mockgen -source token_serializer.go -destination ../../internal/mocks/mock_token_serializer.go -package mocks OpenFGADatastore
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockContinuationTokenSerializer is a mock of ContinuationTokenSerializer interface.
type MockContinuationTokenSerializer struct {
	ctrl     *gomock.Controller
	recorder *MockContinuationTokenSerializerMockRecorder
	isgomock struct{}
}

// MockContinuationTokenSerializerMockRecorder is the mock recorder for MockContinuationTokenSerializer.
type MockContinuationTokenSerializerMockRecorder struct {
	mock *MockContinuationTokenSerializer
}

// NewMockContinuationTokenSerializer creates a new mock instance.
func NewMockContinuationTokenSerializer(ctrl *gomock.Controller) *MockContinuationTokenSerializer {
	mock := &MockContinuationTokenSerializer{ctrl: ctrl}
	mock.recorder = &MockContinuationTokenSerializerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContinuationTokenSerializer) EXPECT() *MockContinuationTokenSerializerMockRecorder {
	return m.recorder
}

// DeserializeReadChanges mocks base method.
func (m *MockContinuationTokenSerializer) DeserializeReadChanges(token string) (string, string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeserializeReadChanges", token)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(string)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// DeserializeReadChanges indicates an expected call of DeserializeReadChanges.
func (mr *MockContinuationTokenSerializerMockRecorder) DeserializeReadChanges(token any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeserializeReadChanges", reflect.TypeOf((*MockContinuationTokenSerializer)(nil).DeserializeReadChanges), token)
}

// SerializeReadChanges mocks base method.
func (m *MockContinuationTokenSerializer) SerializeReadChanges(ulid, objType string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SerializeReadChanges", ulid, objType)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SerializeReadChanges indicates an expected call of SerializeReadChanges.
func (mr *MockContinuationTokenSerializerMockRecorder) SerializeReadChanges(ulid, objType any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SerializeReadChanges", reflect.TypeOf((*MockContinuationTokenSerializer)(nil).SerializeReadChanges), ulid, objType)
}
